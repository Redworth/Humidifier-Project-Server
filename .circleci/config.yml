version: 2.1

orbs:
  kubernetes: circleci/kubernetes@0.12.0

jobs:
  # DEV environment
  build:
    machine:
      image: ubuntu-2004:202101-01
    steps:
    - checkout
    - run:
        name: Add Firebase Credentials
        command: echo $FIREBASE_KEY > credentials.json
    - run:
        name: Build Docker Image
        command: |
          docker login ghcr.io -u rohit-karthik -p $REGISTRY_PASSWORD
          docker build -t ghcr.io/redworth/humidifier-project-server:latest .
    - run:
        name: Push Docker Image
        command: docker push ghcr.io/redworth/humidifier-project-server:latest
  deploy:
    machine:
      image: ubuntu-2004:202101-01
    steps:
    - checkout
    - kubernetes/install-kubectl
    - kubernetes/install-kubeconfig:
        kubeconfig: KUBECONFIG_DATA
    - run:
        name: Restart Deployment (does rolling update with same image pulled, which will be the new latest image)
        command: |
          kubectl rollout restart deployment/iot-backend
   
  # PROD environment
  buildProd:
    machine:
      image: ubuntu-2004:202101-01
    steps:
    - checkout
    - run:
        name: Add Firebase Credentials
        command: echo $FIREBASE_KEY > credentials.json
    - run:
        name: Build Docker Image
        command: |
          docker login ghcr.io -u rohit-karthik -p $REGISTRY_PASSWORD
          docker build -t ghcr.io/redworth/humidifier-project-server:$CIRCLE_BUILD_NUM .
    - run:
        name: Push Docker Image
        command: docker push ghcr.io/redworth/humidifier-project-server:$CIRCLE_BUILD_NUM
  deployProd:
    machine:
      image: ubuntu-2004:202101-01
    steps:
    - checkout
    - kubernetes/install-kubectl
    - kubernetes/install-kubeconfig:
        kubeconfig: KUBECONFIG_DATA
    - kubernetes/update-container-image:
        container-image-updates: 'iot-back-app=ghcr.io/redworth.humidifier-project-server:$CIRCLE_BUILD_NUM'
        resouce-name: deployment/iot-backend
        namespace: 'prod-rohit-karthik'
   
workflows:
  Build and Deploy:
    jobs:
    - build:
        filters:
          branches:
            only:
            - master
    - deploy:
        filters:
          branches:
            only:
            - master
        requires:
        - build
  Build and Deploy (Production):
    triggers:
    - schedule:
        cron: "0 0 1 * *"
        filters:
          branches:
            only:
            - master
    jobs:
    - buildProd:
        filters:
          branches:
            only:
            - master
    - deployProd:
        filters:
          branches:
            only:
            - master
        requires:
        - build
    
    
        
